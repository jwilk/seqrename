#!/bin/sh

# Copyright Â© 2017-2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

set -e -u

usage()
{
    printf 'Usage: %s --format=FORMAT [--start=N] [--step=N] FILE...\n' "${0##*/}"
}

args=$(getopt -n "$0" -o 'h' --long 'help,format:,start:,step:' -- "$@") || {
    usage >&2
    exit 1
}
format=
start=1
step=1
eval set -- "$args"
while true
do
    case "$1" in
        -h|--help) usage; exit 0;;
        --format) format="$2"; shift 2;;
        --start) start="$2"; start=$((start)); shift 2;;
        --step) step="$2"; step=$((step)); shift 2;;
        --) shift; break;;
        *) printf '%s: internal error (%s)\n' "$0" "$1" >&2; exit 1;;
    esac
done
if [ -z "$format" ]
then
    usage >&2
    exit 1
fi
(
    set -C
    n="$start"
    for file in "$@"
    do
        # shellcheck disable=SC2059
        newname=$(printf "$format" "$n")
        stat "$file" > /dev/null
        true > "$newname"
        n=$((n + step))
    done
)
n="$start"
for file in "$@"
do
    # shellcheck disable=SC2059
    newname=$(printf "$format" "$n")
    mv "$file" "$newname"
    n=$((n + step))
done

# vim:ts=4 sts=4 sw=4 et
